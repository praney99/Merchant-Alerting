apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${repoName}-${major}
    version: '${major}'
  name: ${repoName}-${major}
  namespace: pricing-guru
spec:
  progressDeadlineSeconds: 360
  replicas: 2
  selector:
    matchLabels:
      app: ${repoName}-${major}
      version: '${major}'
  template:
    metadata:
      labels:
        app: ${repoName}-${major}
        version: '${major}'
    spec:
      containers:
        - env:
            - name: LOGGING_LEVEL_ROOT
              value: INFO
            - name: ENVIRONMENT
              value: ${ parameters["lifecycle"] }
            - name: VERSION
              value: ${version}
            - name: CONTEXT_PATH
              value: /*
          image: ${gcrImagePath}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 12
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 10
          name: ${repoName}
          ports:
            - containerPort: 8080
          readinessProbe:
            failureThreshold: 12
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
          resources:
            limits:
              cpu: 900m
              memory: 2.5G
            requests:
              cpu: 500m
              memory: 2G
      restartPolicy: Always
      serviceAccountName: svc-pricing-guru
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    beat.cloud.google.com/backend-config: '{"ports": {"http": "${repoName}"}}'
  labels:
    app: ${repoName}-${major}
    version: '${major}'
  name: ${repoName}-${major}
  namespace: pricing-guru
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: ${repoName}-${major}
    version: '${major}'
  type: NodePort
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: ${repoName}-${major}
    version: '${major}'
  name: ${repoName}-${major}
spec:
  maxReplicas: 3
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ${repoName}-${major}
  targetCPUUtilizationPercentage: 50
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  labels:
    app: ${repoName}
    branch: master
    instance: master
  name: ${repoName}
  namespace: pricing-guru
spec:
  securityPolicy:
    name: thd-network-cloud-armor-policy
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: crt-pricing-guru-merchant-alerting
  namespace: pricing-guru
spec:
  domains:
    - merchant-alerting.${ parameters["project"] }.gcp.homedepot.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: 'false'
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: pricing-guru-merchant-alerting-svc
    networking.gke.io/managed-certificates: crt-pricing-guru-merchant-alerting
  labels:
    app: ${repoName}
    branch: master
    instance: master
  name: ${repoName}-ingress
  namespace: pricing-guru
spec:
  rules:
    - host: merchant-alerting.${ parameters["project"] }.gcp.homedepot.com
      http:
        paths:
          - backend:
              service:
                name: ${repoName}-${major}
                port:
                  number: 8080
            path: /*
            pathType: ImplementationSpecific
